# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- dev

pool:
  vmImage: ubuntu-latest

stages:
  - stage: Build
    displayName: Build and push image
    jobs:
      - job:
        steps:
          - task: Docker@2
            inputs:
              containerRegistry: 'Docker Hub'
              repository: 'victorb96/gf-controle-acesso'
              command: 'build'
              Dockerfile: './Dockerfile'
              buildContext: '.'
              tags: |
                $(Build.BuildId)
                latest
              arguments: '--build-arg DB_HOST=$(DB_HOST) --build-arg DB_NAME=$(DB_NAME) --build-arg DB_PORT=$(DB_PORT) --build-arg DB_USER=$(DB_USER) --build-arg DB_PWD=$(DB_PWD) --build-arg JWT_CONTROLE_ACESSO_KEY=$(JWT_CONTROLE_ACESSO_KEY)'
          - task: Docker@2
            inputs:
              containerRegistry: 'Docker Hub'
              repository: 'victorb96/gf-controle-acesso'
              command: 'push'
              tags: |
                $(Build.BuildId)
                latest
  - stage: QA
    dependsOn:
    - Build
    jobs:
      - job: Deploy
        steps:
          - task: AzureRmWebAppDeployment@4
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'Assinatura do Azure 1(26954947-37d0-4d54-bbcb-0cb38650264d)'
              appType: 'webAppContainer'
              WebAppName: 'gf-controle-acesso'
              DockerNamespace: 'victorb96'
              DockerRepository: 'gf-controle-acesso'
              DockerImageTag: '$(Build.BuildId)'
  - stage: HML
    dependsOn:
    - QA
    jobs:
      - deployment: 
        environment: HML
        strategy:
          runOnce:
            deploy:
              steps:
                - script: echo Deploy HML

name: CI/CD Pipeline

on:
  push:
    branches:
      - '*'

jobs:
  database:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Execute SQL Scripts
        run: |
          psql postgresql://$DB_USER:$DB_PWD@$DB_HOST:$DB_PORT/postgres -f ControleAcesso/Src/Sql/GfControleAcessoBase.sql
          psql postgresql://$DB_USER:$DB_PWD@$DB_HOST:$DB_PORT/postgres -f ControleAcesso/Src/Sql/GfControleAcessoScript.sql
    env:
      DB_USER: ${{ secrets.DB_USER }}
      DB_PWD: ${{ secrets.DB_PWD }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}

  dotnet:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Restore dependencies
        run: dotnet restore ControleAcesso/**/*.csproj
      - name: Build
        run: dotnet build ControleAcesso/**/*.csproj --configuration Release

  docker:
    needs: dotnet
    runs-on: ubuntu-latest
    if: github.ref_name == 'dev' || github.ref_name == 'main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      - name: Build Docker image
        run: |
          docker build -t victorb96/gf-controle-acesso:${{ github.run_id }} -t victorb96/gf-controle-acesso:latest .
      - name: Push Docker image
        run: |
          docker push victorb96/gf-controle-acesso:${{ github.run_id }}
          docker push victorb96/gf-controle-acesso:latest

  deploy_qa:
    needs: docker
    runs-on: ubuntu-latest
    if: github.ref_name == 'dev'
    steps:
      - name: Deploy to QA
        uses: azure/webapps-deploy@v3
        with:
          app-name: gf-controle-acesso
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          images: victorb96/gf-controle-acesso:${{ github.run_id }}

  deploy_hml:
    needs: docker
    runs-on: ubuntu-latest
    if: github.ref_name == 'main'
    steps:
      - name: Deploy to HML
        run: echo "Deploy HML"
